分12个部分：

1.起草计划（Laying Plans）：Designing Databases for Performance
  了解数据库模型对数据的正确性和一致性起到的重要性。

a.数据的关系观念（The Relational View of Data）
所谓的关系，也就是由有关系的列构成的表，准确地说，一张表就代表一种关系
而建模就是设计表，作为呈现现实业务需求的一种方式。前提条件是了解业务需求。
业务需求是确定需要建模的现实情况的范围。

Note
关系模型的一致性是关键的重要概念。
因为原理（principles）的内在数学稳定性是关系型数据库建模的基础，所以我们可以
对经过原始数据任意查询所产生的有效结果有完全的信心。关系理论中的一些关键原理是一种关系（relation）
，定义中不包含重复。

建模是业务需求的投射。（Modeling is the projection of business requirements）


b.论标准的重要性（The Importance of Being Normal）
规则化（Normalization）。3个范式。
Step 1：确保原子性（Ensure Atomicity）
  确认数据是否原子性是解决扩展的首要问题。		Data-entry(数据录入)
  
  定义数据的原子性需要和业务需求相关联。而不是简单地按照想象进行区分。
  根据业务需求需要在什么程度上对数据进行操作，从而构建数据的原子性。
  
  确定数据的原子性后，接下来就是识别什么能够唯一地描述行(row)的特性。（主键 primary key）
  在此阶段，主键很可能是组合形式，由两个或多个单独的属性构成。
  
  一旦所有的所有的属性都具有原子性并且定义了主键，那么我们的表就符合了1NF（first normal form）
  
Step 2：在所有的键上检查依赖（Check Dependence on the Whole Key）。
  消除非主属性对主属性的部分依赖（非主属性完全依赖于主属性）
  
Step 3：检查非主属性的独立性（Check Attribute Independence）
  消除非主属性对主属性的传递依赖
  
正规化（normalization）流程是基于建模时的app的原子性。


c.Null的好与坏（To Be or Not to Be, or to Be Null）
  关系模型的完整性是基于二值逻辑(two-valued logic)的应用。是或者不是。而null值具有不确定性。
  引入null值，就不可避免引入了三值逻辑(three-valued logic. “true,false or indeterminate ”)，
  也就引入了语义上的不一致性。
  在row中使用null或者隐式规则(implicit rules)，基本意味着对最初的模型有着关键性的错误理解。（依赖）

  
  
2.战争动员（Waging War）：Accessing Databases Efficiently

3.战术部署（tactical Dispositions）：Indexing

4.机动（Maneuvering）：Thinking SQL Statements

5.地形地势（Terrain）：Understanding Physical Implementation

6.九种形势（The Nine Situations）：Recognizing Classic SQL Patterns

7.战术的变化（Variations in Tactics）：Dealing with Hierarchical Data

8.弱点与长处（Weaknesses and Strengths）：Recognizing and Handling Difficult Cases

9.多面作战（Multiple Fronts）：Tacking Concurrency

10.火力集结（Assembly of Forces）：Coping with Large Volumes of Data

11.计谋（Stratagems）：Trying to Salvage Response Times

12.雇佣间谍（Employment of Spies）：Monitoring Performance

