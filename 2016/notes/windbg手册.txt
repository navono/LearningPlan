windbg查看堆内存：
1. !heap -s
	查看所有堆，找出异常堆
2. !heap -stat -h xxx
	打印出堆中的各个块的大小和使用情况，找出最大的块
3. !heap -flt s xxx
	对最大块的使用情况进行分析
4. 找到UserPtr，进行正常分析，比如使用db,da等命令查看具体分配的内容，结合代码，查看相应的堆分配。
   dds可以显示堆栈

========================================================================================================
windbg查看死锁：
1. ~*kbn
	找到是否有类似RtlEnterCriticalSection的栈，找到其第一个参数
2. !cs xxx，例如：
0:003> !cs 00403370   
10.-----------------------------------------  
11.Critical section   = 0x00403370 (test2+0x3370)  
12.DebugInfo          = 0x7c99e9e0  
13.LOCKED  
14.LockCount          = 0x1  
15.OwningThread       = 0x0000185c  
16.RecursionCount     = 0x1  
17.LockSemaphore      = 0x2C  
18.SpinCount          = 0x00000000  

这里LockCount为1意思为除了一个线程拥有它外，另外还有一个线程在等待它

3. ~~[0x0000185c]
	查看占用情况：
0:003> ~~[0x0000185c]  
02.   2  Id: 1a98.185c Suspend: 1 Teb: 7ffdd000 Unfrozen  
03.      Start: test2+0x1030 (00401030)   
04.      Priority: 0  Priority class: 32  Affinity: f

等待的临界区拥有者是2号线程

4. 在不同的线程上使用上述方法，可以判断是否死锁
5. !locks
	显示已经被锁的资源
   !cs -l
	显示锁定的临界区
   !cs -o
    对所有显示出来的已锁定的临界区，显示所有者的堆栈

========================================================================================================
windbg查看句柄
1. !htrace -enable开启句柄跟踪开关。
2. 在某个时刻，!htrace -snapshot进行快照
3. 对程序操作一些已确定或者怀疑会引发涨句柄的操作
4. !htrace -diff
5. 找到diff后还是OPEN的句柄
6. !htrace 0x000005a0
7. lsa test!cclass1::func1+0x00000056




