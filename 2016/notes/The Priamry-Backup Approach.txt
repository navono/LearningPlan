从三个方面衡量primary-backup协议的性能
1. 复制的程度（Degree of Replication）:实现此协议的服务器的数量
2. 阻塞时间（Blocking Time）：在任意无故障（failure free）的情况下，在请求和相应之间的最差的时间间隔
3. 故障失效时间（Failover Time）：在无主（no primary）的情况下，请求被丢失的最差情况


要成为primary-backup协议需要满足以下4个条件：
Pb1. 在每个服务s的状态中，都维护着一个本地的成为Master的断言Prmy-s（predicate）。在任意的时间点，最多只有一台服务的状态
      满足Master断言。

鉴于Pb1，我们就可以回答上面的第3个问题：故障失效时间。也就是任意一台服务的状态都不满足Master断言的时间。

Pb2. 每个客户端i都维护者一个服务的ID，Dest-i，每次需要做出请求时，直接向Dest-i发送

假设每次发往s的请求都被压入到s的请求队列（message queue）。

Pb3. 如果当前一台非主服务收到了来自客户端的请求，那么次请求被直接抛弃（不会被压入请求队列）

从表面上看，满足Pb1和Pb3就可以消除Pb2。但是可能会存在一种情况：如果不存在Pb2，那么客户端可以将请求发往多个服务，而恰好
服务正在处于主备切换间的话，就有可能一条请求被压入到不同时间主服务的请求队列中。

Pb4. 存在一个固定值K和A，每个服务器提供的服务满足（K，A）
K代表一台服务器的服务中断次数，A代表在这些服务中断的最长一次的时间。



故障模型：
Crash failure：因为服务器停机，导致服务中断
Crash + Link failure：服务器停机或者链路的消息丢失（丢包），导致服务中断。
	链路失效的可能原因是网络阻塞或者硬件问题
Receuve-Omission failure：服务器停机，以及遗漏从客户端发来的消息（通过状态良好的链路），会导致服务失效。
	可能的原因是传输速率太高或者缓冲区容量不够
Send-Omission failure：服务器停机，以及遗漏从服务发出的消息（通过状态良好的链路），会导致服务失效。
General-Omission failure：遗漏从客户端发来的消息或从服务发出的消息，会导致服务失效。


从上述三个方面（包括Lower bound和Upper Bound），衡量在每个故障模型下的性能。

已有的Primary-Backup协议：
1. Alsberg and Day协议
2. Tandem协议
4. HA-NFS协议
5. Non-Blocking协议





